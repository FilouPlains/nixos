# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "usb_storage" "usbhid" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/78d4f3b5-7908-4c3c-9fe3-7c0c6e6ab0fe";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."luks-f8ab6bc8-64e2-42ea-a9ce-3e6905183dd0".device = "/dev/disk/by-uuid/f8ab6bc8-64e2-42ea-a9ce-3e6905183dd0";

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/2AA8-65D0";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };

  fileSystems."/home" =
    { device = "/dev/disk/by-uuid/aa566f36-9023-470f-bfa8-d4414d33081c";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."luks-9fa67535-b70b-44c3-a4e5-2b5d5eaedf2c".device = "/dev/disk/by-uuid/9fa67535-b70b-44c3-a4e5-2b5d5eaedf2c";

  swapDevices =
    [ { device = "/dev/disk/by-uuid/3e0c13e2-57a2-4663-a326-b9a60560f4f9"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno2.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlo1.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
